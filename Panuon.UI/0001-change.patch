From a008239fc73cdbb7690601bc328de5139b104cba Mon Sep 17 00:00:00 2001
From: 86183 <86183@DESKTOP-SABKKDC>
Date: Wed, 19 Jun 2019 10:38:31 +0800
Subject: [PATCH] =?UTF-8?q?change:=E6=A0=87=E9=A2=98=E6=A0=8F=E6=B7=BB?=
 =?UTF-8?q?=E5=8A=A0=E6=8C=89=E9=92=AE?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 Panuon.UI/0_Base/PUWindow.cs     | 19 ++++++++++++++-----
 Panuon.UI/Z_Others/Converters.cs |  2 +-
 2 files changed, 15 insertions(+), 6 deletions(-)

diff --git a/Panuon.UI/0_Base/PUWindow.cs b/Panuon.UI/0_Base/PUWindow.cs
index c133545..aca7e18 100644
--- a/Panuon.UI/0_Base/PUWindow.cs
+++ b/Panuon.UI/0_Base/PUWindow.cs
@@ -14,7 +14,20 @@ using System.Windows.Threading;
 namespace Panuon.UI
 {
     public class PUWindow : Window
-    {
+    {
+      
+        public static readonly DependencyProperty NavTitleBarVisibilityProperty =
+            DependencyProperty.RegisterAttached("NavTitleBarVisibility", typeof(Visibility), typeof(PUWindow));
+
+        public static Visibility GetNavTitleBarVisibility(DependencyObject o)
+        {
+            return (Visibility) o.GetValue(NavTitleBarVisibilityProperty);
+        }
+        public static void SetNavTitleBarVisibility(DependencyObject o, Visibility v)
+        {
+           o.SetValue(NavTitleBarVisibilityProperty,v);
+        }
+
         #region Import
         [DllImport("user32.dll")]
         static extern IntPtr GetForegroundWindow();
@@ -643,10 +656,6 @@ namespace Panuon.UI
             var visibility = new Binding() { Path = new PropertyPath("NavButtonVisibility"), UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged, Source = this, Mode = BindingMode.OneWay };
             BindingOperations.SetBinding(btn, VisibilityProperty, visibility);
 
-            var width = new Binding() { Path = new PropertyPath("NavButtonWidth"), UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged, Source = this, Mode = BindingMode.OneWay };
-            BindingOperations.SetBinding(btn, WidthProperty, width);
-            var height = new Binding() { Path = new PropertyPath("NavButtonHeight"), UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged, Source = this, Mode = BindingMode.OneWay };
-            BindingOperations.SetBinding(btn, HeightProperty, height);
             var fontsize = new Binding() { Path = new PropertyPath("FontSize"), UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged, Source = this, Mode = BindingMode.OneWay };
             BindingOperations.SetBinding(btn, FontSizeProperty, fontsize);
             btn.Click += clickHandler;
diff --git a/Panuon.UI/Z_Others/Converters.cs b/Panuon.UI/Z_Others/Converters.cs
index ca90246..e00cf8b 100644
--- a/Panuon.UI/Z_Others/Converters.cs
+++ b/Panuon.UI/Z_Others/Converters.cs
@@ -259,7 +259,7 @@ namespace Panuon.UI
         public object Convert(object[] values, Type targetType, object parameter, CultureInfo culture)
         {
             //0是Header，1是Title
-            return (string)values[0] == null ? (string)values[1]: (string)values[0];
+            return values[0] == null ? (string)values[1]: values[0];
         }
 
         public object[] ConvertBack(object value, Type[] targetTypes, object parameter, CultureInfo culture)
-- 
2.21.0.windows.1

