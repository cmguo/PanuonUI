From 00552675061fd068ac1f778ba5b1099197ee8b33 Mon Sep 17 00:00:00 2001
From: guochunmao <guochunmao@100tal.com>
Date: Thu, 27 Jun 2019 19:07:05 +0800
Subject: [PATCH] TitleBar Commands

---
 Panuon.UI/0_Base/PUWindow.cs  | 33 +++++++++++++++++++++++++++++++--
 Panuon.UI/Themes/Generic.xaml |  7 +++----
 2 files changed, 34 insertions(+), 6 deletions(-)

diff --git a/Panuon.UI/0_Base/PUWindow.cs b/Panuon.UI/0_Base/PUWindow.cs
index aca7e18..1f45fbf 100644
--- a/Panuon.UI/0_Base/PUWindow.cs
+++ b/Panuon.UI/0_Base/PUWindow.cs
@@ -82,6 +82,10 @@ namespace Panuon.UI
             catch (Exception ex) { }
 
             PreviewMouseMove += OnPreviewMouseMove;
+
+            CommandBindings.Add(new CommandBinding(ApplicationCommands.Close, 
+                (s, e) => CloseCommand.Execute(this), 
+                (s, e) => e.CanExecute = CloseCommand.CanExecute(this)));
         }
         #endregion
 
@@ -658,7 +662,17 @@ namespace Panuon.UI
 
             var fontsize = new Binding() { Path = new PropertyPath("FontSize"), UpdateSourceTrigger = UpdateSourceTrigger.PropertyChanged, Source = this, Mode = BindingMode.OneWay };
             BindingOperations.SetBinding(btn, FontSizeProperty, fontsize);
-            btn.Click += clickHandler;
+            btn.Click += clickHandler;
+            AppendNavButton(btn);
+        }
+
+        public void RemoveNavButton(UIElement btn)
+        {
+            _stkNav.Children.Remove(btn);
+        }
+
+        public void AppendNavButton(UIElement btn)
+        {
             if (IsLoaded)
                 _stkNav.Children.Insert(0, btn);
             else
@@ -669,8 +683,23 @@ namespace Panuon.UI
                 };
             }
         }
-        #endregion
 
+        public PUButton GetNavButton(string name)
+        {
+            name = "btn" + name;
+            foreach (UIElement e in _stkNav.Children)
+            {
+                PUButton b = e as PUButton;
+                if (b == null)
+                    continue;
+                if (b.Name == name)
+                    return b;
+            }
+            return null;
+        }
+
+        #endregion
+
         #region Function
         private static bool IsModal(Window window)
         {
diff --git a/Panuon.UI/Themes/Generic.xaml b/Panuon.UI/Themes/Generic.xaml
index 5ad43e3..eb6e938 100644
--- a/Panuon.UI/Themes/Generic.xaml
+++ b/Panuon.UI/Themes/Generic.xaml
@@ -605,7 +605,7 @@
                                                     <local:PUButton x:Name="btnClose"
                                                                     Visibility="Collapsed"
                                                                     Content="×"
-                                                                    Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
+                                                                    Command="ApplicationCommands.Close"
                                                                     CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                     ButtonStyle="Hollow"
                                                                     BorderBrush="Transparent"
@@ -955,7 +955,7 @@
                                                     <local:PUButton x:Name="btnClose"
                                                                     Visibility="Hidden"
                                                                     Content="×"
-                                                                    Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
+                                                                    Command="{Binding ApplicationCommands.Close}"
                                                                     CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
                                                                     ButtonStyle="Hollow"
                                                                     BorderBrush="Transparent"
@@ -1317,8 +1317,7 @@
                                                     <local:PUButton x:Name="btnClose"
                                                                     Visibility="Hidden"
                                                                     Content="×"
-                                                                    Command="{Binding CloseCommand,RelativeSource={RelativeSource AncestorType=Window}}"
-                                                                    CommandParameter="{Binding RelativeSource={x:Static RelativeSource.TemplatedParent}}"
+                                                                    Command="ApplicationCommands.Close"
                                                                     ButtonStyle="Hollow"
                                                                     BorderBrush="Transparent"
                                                                     CoverBrush="#CCC53434"
-- 
2.21.0.windows.1

